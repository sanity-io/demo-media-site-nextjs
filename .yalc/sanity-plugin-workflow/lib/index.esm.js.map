{"version":3,"file":"index.esm.js","sources":["../src/components/DocumentCard/EditButton.tsx","../src/components/DocumentCard/AvatarGroup.tsx","../src/components/UserAssignment.tsx","../src/components/DocumentCard/index.tsx","../src/components/Mutate.tsx","../src/hooks/useWorkflowDocuments.tsx","../src/components/WorkflowTool.tsx","../src/schema/workflow/metadata.ts","../src/hooks/useWorkflowMetadata.tsx","../src/badges/index.tsx","../src/actions/PromoteAction.tsx","../src/actions/DemoteAction.tsx","../src/index.ts"],"sourcesContent":["import React from 'react'\nimport {Button} from '@sanity/ui'\nimport {EditIcon} from '@sanity/icons'\nimport {useRouter} from 'sanity/router'\n\ntype EditButtonProps = {\n  id: string\n  type: string\n}\n\nexport default function EditButton(props: EditButtonProps) {\n  const {id, type} = props\n  const {navigateIntent} = useRouter()\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => navigateIntent('edit', {id, type})}\n      mode=\"ghost\"\n      fontSize={1}\n      padding={2}\n      tabIndex={-1}\n      icon={EditIcon}\n      text=\"Edit\"\n    />\n  )\n}\n","import React from 'react'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\nimport {User} from '../../types'\n\ntype AvatarGroupProps = {\n  users: User[]\n  max?: number\n}\n\nexport default function AvatarGroup(props: AvatarGroupProps) {\n  const {users, max = 3} = props\n\n  const len = users?.length\n  const visibleUsers = React.useMemo(() => users.slice(0, max), [users]) as User[]\n\n  if (!users?.length) {\n    return null\n  }\n\n  return (\n    <Flex align=\"center\">\n      {visibleUsers.map((user) => (\n        <Box key={user.id} style={{marginRight: -5}}>\n          <UserAvatar user={user} />\n        </Box>\n      ))}\n      {len > max && (\n        <Box paddingLeft={2}>\n          <Text size={1}>+{len - max}</Text>\n        </Box>\n      )}\n    </Flex>\n  )\n}\n","import React from 'react'\nimport {Button, Popover, useToast} from '@sanity/ui'\nimport {AddIcon} from '@sanity/icons'\nimport {UserSelectMenu} from 'sanity-plugin-utils'\nimport {useClient} from 'sanity'\n\nimport AvatarGroup from './DocumentCard/AvatarGroup'\nimport {User} from '../types'\n\ntype UserAssignmentProps = {\n  userList: User[]\n  assignees: string[]\n  documentId: string\n}\n\nexport default function UserAssignment(props: UserAssignmentProps) {\n  const {assignees, userList, documentId} = props\n  const client = useClient()\n  const toast = useToast()\n  const [openId, setOpenId] = React.useState<string>(``)\n\n  const addAssignee = React.useCallback(\n    (userId: string) => {\n      if (!userId) {\n        return toast.push({\n          status: 'error',\n          title: 'No user selected',\n        })\n      }\n\n      client\n        .patch(`workflow-metadata.${documentId}`)\n        .setIfMissing({assignees: []})\n        .insert(`after`, `assignees[-1]`, [userId])\n        .commit()\n        .then(() => {\n          return toast.push({\n            title: `Assigned user to document`,\n            description: userId,\n            status: 'success',\n          })\n        })\n        .catch((err) => {\n          console.error(err)\n\n          return toast.push({\n            title: `Failed to add assignee`,\n            description: userId,\n            status: 'error',\n          })\n        })\n    },\n    [documentId, client, toast]\n  )\n\n  const removeAssignee = React.useCallback(\n    (id: string, userId: string) => {\n      client\n        .patch(`workflow-metadata.${id}`)\n        .unset([`assignees[@ == \"${userId}\"]`])\n        .commit()\n        .then((res) => res)\n        .catch((err) => {\n          console.error(err)\n\n          return toast.push({\n            title: `Failed to remove assignee`,\n            description: id,\n            status: 'error',\n          })\n        })\n    },\n    [client, toast]\n  )\n\n  const clearAssignees = React.useCallback(\n    (id: string) => {\n      client\n        .patch(`workflow-metadata.${id}`)\n        .unset([`assignees`])\n        .commit()\n        .then((res) => res)\n        .catch((err) => {\n          console.error(err)\n\n          return toast.push({\n            title: `Failed to clear assignees`,\n            description: id,\n            status: 'error',\n          })\n        })\n    },\n    [client, toast]\n  )\n\n  return (\n    <Popover\n      // @ts-ignore\n      // ref={setPopoverRef}\n      // onKeyDown={handleKeyDown}\n      content={\n        <UserSelectMenu\n          style={{maxHeight: 300}}\n          value={assignees || []}\n          userList={userList}\n          onAdd={addAssignee}\n          onClear={clearAssignees}\n          onRemove={removeAssignee}\n          open={openId === documentId}\n        />\n      }\n      portal\n      open={openId === documentId}\n    >\n      {!assignees || assignees.length === 0 ? (\n        <Button\n          onClick={() => setOpenId(documentId)}\n          fontSize={1}\n          padding={2}\n          tabIndex={-1}\n          icon={AddIcon}\n          text=\"Assign\"\n          tone=\"positive\"\n        />\n      ) : (\n        <Button\n          onClick={() => setOpenId(documentId)}\n          padding={0}\n          mode=\"bleed\"\n          style={{width: `100%`}}\n        >\n          <AvatarGroup users={userList.filter((u) => assignees.includes(u.id))} />\n        </Button>\n      )}\n    </Popover>\n  )\n}\n","/* eslint-disable react/prop-types */\nimport {Box, Button, Card, Flex, Popover, Stack, useClickOutside, useTheme} from '@sanity/ui'\nimport {AddIcon, DragHandleIcon} from '@sanity/icons'\nimport React, {useState} from 'react'\nimport {useSchema, SchemaType} from 'sanity'\nimport {UserSelectMenu} from 'sanity-plugin-utils'\nimport {SanityPreview as Preview} from 'sanity'\n\nimport EditButton from './EditButton'\nimport {SanityDocumentWithMetadata, User} from '../../types'\nimport AvatarGroup from './AvatarGroup'\nimport UserAssignment from '../UserAssignment'\n\ntype DocumentCardProps = {\n  userList: User[]\n  isDragging: boolean\n  item: SanityDocumentWithMetadata\n}\n\nexport function DocumentCard(props: DocumentCardProps) {\n  const {userList, isDragging, item} = props\n  const {assignees, documentId} = item._metadata ?? {}\n  const schema = useSchema()\n\n  const isDarkMode = useTheme().sanity.color.dark\n  const defaultCardTone = isDarkMode ? 'transparent' : 'default'\n\n  // Open/close handler\n  // const [popoverRef, setPopoverRef] = useState(null)\n  // const [openId, setOpenId] = useState<string | undefined>(``)\n\n  // useClickOutside(() => setOpenId(``), [popoverRef])\n\n  // const handleKeyDown = React.useCallback((e) => {\n  //   if (e.key === 'Escape') {\n  //     setOpenId(``)\n  //   }\n  // }, [])\n\n  return (\n    <Box paddingY={2} paddingX={3}>\n      <Card radius={2} shadow={isDragging ? 3 : 1} tone={isDragging ? 'positive' : defaultCardTone}>\n        <Stack>\n          <Card\n            borderBottom\n            radius={2}\n            padding={3}\n            paddingLeft={2}\n            tone=\"inherit\"\n            style={{pointerEvents: 'none'}}\n          >\n            <Flex align=\"center\" justify=\"space-between\" gap={1}>\n              <Preview\n                layout=\"default\"\n                value={item}\n                schemaType={schema.get(item._type) as SchemaType}\n              />\n              <DragHandleIcon style={{flexShrink: 0}} />\n            </Flex>\n          </Card>\n\n          <Card padding={2} radius={2} tone=\"inherit\">\n            <Flex align=\"center\" justify=\"space-between\" gap={1}>\n              <UserAssignment userList={userList} assignees={assignees} documentId={documentId} />\n\n              <EditButton id={item._id} type={item._type} />\n            </Flex>\n          </Card>\n        </Stack>\n      </Card>\n    </Box>\n  )\n}\n","import React from 'react'\nimport {Card, useToast} from '@sanity/ui'\nimport {useDocumentOperation} from 'sanity'\n\nimport {State} from '../types'\n\ntype MutateProps = {\n  _id: string\n  _type: string\n  state: State\n  documentId: string\n  onComplete: (id: string) => void\n}\n\nexport default function Mutate(props: MutateProps) {\n  const {_id, _type, documentId, state, onComplete} = props\n  const ops = useDocumentOperation(documentId, _type)\n  const isDraft = _id.startsWith('drafts.')\n\n  const toast = useToast()\n\n  if (isDraft && state.operation === 'publish') {\n    if (!ops.publish.disabled) {\n      ops.publish.execute()\n      onComplete(_id)\n      toast.push({\n        title: 'Published Document',\n        description: documentId,\n        status: 'success',\n      })\n    }\n  } else if (!isDraft && state.operation === 'unpublish') {\n    if (!ops.unpublish.disabled) {\n      ops.unpublish.execute()\n      onComplete(_id)\n      toast.push({\n        title: 'Unpublished Document',\n        description: documentId,\n        status: 'success',\n      })\n    }\n  } else {\n    // Clean up if it's not going to un/publish\n    onComplete(_id)\n  }\n\n  // return null\n\n  return (\n    <Card padding={3} shadow={2} tone=\"primary\">\n      Mutating: {_id} to {state.title}\n    </Card>\n  )\n}\n","import React from 'react'\nimport {useListeningQuery} from 'sanity-plugin-utils'\nimport {useToast} from '@sanity/ui'\nimport {SanityDocumentLike, useClient} from 'sanity'\nimport {DraggableLocation} from 'react-beautiful-dnd'\n\nimport {SanityDocumentWithMetadata, Metadata, State} from '../types'\n\ntype DocumentsAndMetadata = {\n  documents: SanityDocumentLike[]\n  metadata: Metadata[]\n}\n\nconst DOCUMENT_LIST_QUERY = `*[_type in $schemaTypes]{ _id, _type, _rev }`\nconst METADATA_LIST_QUERY = `*[_type == \"workflow.metadata\"]{\n  _rev,\n  assignees,\n  documentId,\n  state\n}`\n\nconst COMBINED_QUERY = `{\n  \"documents\": ${DOCUMENT_LIST_QUERY},\n  \"metadata\": ${METADATA_LIST_QUERY}\n}`\n\nconst INITIAL_DATA: DocumentsAndMetadata = {\n  documents: [],\n  metadata: [],\n}\n\nexport function useWorkflowDocuments(schemaTypes: string[]) {\n  const toast = useToast()\n  const client = useClient()\n  const [localDocuments, setLocalDocuments] = React.useState<SanityDocumentWithMetadata[]>([])\n\n  // Get and listen to changes on documents + workflow metadata documents\n  const {data, loading, error} = useListeningQuery<DocumentsAndMetadata>(COMBINED_QUERY, {\n    params: {schemaTypes},\n    initialValue: INITIAL_DATA,\n  })\n\n  // Store local state for optimistic updates\n  React.useEffect(() => {\n    if (data) {\n      // Combine metadata data into document\n      const documentsWithMetadata = data.documents.reduce(\n        (acc: SanityDocumentWithMetadata[], cur) => {\n          // Filter out documents without metadata\n          const curMeta = data.metadata.find((d) => d.documentId === cur._id.replace(`drafts.`, ``))\n\n          // Add _metadata as null so it can be shown as a document that needs to be imported into workflow\n          if (!curMeta) {\n            return [...acc, {_metadata: null, ...cur}]\n          }\n\n          const curWithMetadata = {_metadata: curMeta, ...cur}\n\n          // Remove `published` from array if `draft` exists\n          if (!cur._id.startsWith(`drafts.`)) {\n            // eslint-disable-next-line max-nested-callbacks\n            const alsoHasDraft: boolean = Boolean(\n              data.documents.find((doc) => doc._id === `drafts.${cur._id}`)\n            )\n\n            return alsoHasDraft ? acc : [...acc, curWithMetadata]\n          }\n\n          return [...acc, curWithMetadata]\n        },\n        []\n      )\n\n      setLocalDocuments(documentsWithMetadata)\n    }\n  }, [data])\n\n  const move = React.useCallback(\n    (draggedId: string, destination: DraggableLocation, states: State[]) => {\n      // Optimistic update\n      const currentLocalData = localDocuments\n      const newLocalDocuments = localDocuments.map((item) => {\n        if (item._metadata.documentId === draggedId) {\n          return {\n            ...item,\n            _metadata: {\n              ...item._metadata,\n              state: destination.droppableId,\n            },\n          }\n        }\n\n        return item\n      })\n\n      setLocalDocuments(newLocalDocuments)\n\n      // Now client-side update\n      const newStateId = destination.droppableId\n      const newState = states.find((s) => s.id === newStateId)\n      const document = localDocuments.find((d) => d._metadata.documentId === draggedId)\n\n      if (!newState?.id) {\n        toast.push({\n          title: `Could not find target state ${newStateId}`,\n          status: 'error',\n        })\n        return null\n      }\n\n      if (!document) {\n        toast.push({\n          title: `Could not find dragged document in data`,\n          status: 'error',\n        })\n        return null\n      }\n\n      // We need to know if it's a draft or not\n      const {_id, _type} = document\n\n      // Metadata + useDocumentOperation always uses Published id\n      const {_rev, documentId} = document._metadata\n\n      client\n        .patch(`workflow-metadata.${documentId}`)\n        .ifRevisionId(_rev)\n        .set({state: newStateId})\n        .commit()\n        .then(() => {\n          return toast.push({\n            title: `Moved to \"${newState?.title ?? newStateId}\"`,\n            description: documentId,\n            status: 'success',\n          })\n        })\n        .catch(() => {\n          // Revert optimistic update\n          setLocalDocuments(currentLocalData)\n\n          return toast.push({\n            title: `Failed to move to \"${newState?.title ?? newStateId}\"`,\n            description: documentId,\n            status: 'error',\n          })\n        })\n\n      // Send back to the workflow board so a document update can happen\n      return {_id, _type, documentId, state: newState as State}\n    },\n    [client, toast, localDocuments]\n  )\n\n  return {\n    workflowData: {data: localDocuments, loading, error},\n    operations: {move},\n  }\n}\n","import React from 'react'\nimport {\n  Flex,\n  Card,\n  Box,\n  Grid,\n  Spinner,\n  Label,\n  useToast,\n  Container,\n  useTheme,\n  Button,\n} from '@sanity/ui'\nimport {Feedback, useProjectUsers} from 'sanity-plugin-utils'\nimport {Tool, useClient} from 'sanity'\nimport {DragDropContext, Droppable, Draggable, DropResult} from 'react-beautiful-dnd'\n\nimport {SanityDocumentWithMetadata, State} from '../types'\nimport {DocumentCard} from './DocumentCard'\nimport Mutate from './Mutate'\nimport {useWorkflowDocuments} from '../hooks/useWorkflowDocuments'\n\nfunction filterItemsByState(items: SanityDocumentWithMetadata[], stateId: string) {\n  return items.filter((item) => item?._metadata?.state === stateId)\n}\n\ntype WorkflowToolOptions = {\n  schemaTypes: string[]\n  states: State[]\n}\n\ntype WorkflowToolProps = {\n  tool: Tool<WorkflowToolOptions>\n}\n\ntype MutateProps = {\n  _id: string\n  _type: string\n  state: State\n  documentId: string\n}\n\nexport default function WorkflowTool(props: WorkflowToolProps) {\n  const {schemaTypes = [], states = []} = props?.tool?.options ?? {}\n\n  const [mutatingDocs, setMutatingDocs] = React.useState<MutateProps[]>([])\n  const mutationFinished = React.useCallback((documentId: string) => {\n    setMutatingDocs((docs) => docs.filter((doc) => doc._id !== documentId))\n  }, [])\n\n  const client = useClient()\n  const toast = useToast()\n\n  const isDarkMode = useTheme().sanity.color.dark\n  const defaultCardTone = isDarkMode ? 'default' : 'transparent'\n\n  const userList = useProjectUsers() || []\n  const {workflowData, operations} = useWorkflowDocuments(schemaTypes)\n\n  // Data to display in cards\n  const {data, loading, error} = workflowData\n\n  // Operations to perform on cards\n  const {move} = operations\n\n  const documentsWithoutMetadataIds = data\n    .filter((doc) => !doc._metadata)\n    .map((d) => d._id.replace(`drafts.`, ``))\n\n  const importDocuments = React.useCallback(async (ids: string[]) => {\n    toast.push({\n      title: 'Importing documents',\n      status: 'info',\n    })\n\n    const tx = ids.reduce((item, documentId) => {\n      return item.createOrReplace({\n        _id: `workflow-metadata.${documentId}`,\n        _type: 'workflow.metadata',\n        state: states[0].id,\n        documentId,\n      })\n    }, client.transaction())\n\n    await tx.commit()\n\n    toast.push({\n      title: 'Imported documents',\n      status: 'success',\n    })\n  }, [])\n\n  const handleDragEnd = React.useCallback(\n    (result: DropResult) => {\n      const {draggableId, source, destination} = result\n      console.log(\n        `sending ${draggableId} from ${source.droppableId} to ${destination?.droppableId}`\n      )\n\n      if (!destination || destination.droppableId === source.droppableId) {\n        return\n      }\n\n      // The list of mutating docs is how we un/publish documents\n      const mutatingDoc = move(draggableId, destination, states)\n\n      if (mutatingDoc) {\n        setMutatingDocs((current) => [...current, mutatingDoc])\n      }\n    },\n    [move, states]\n  )\n\n  if (!states?.length) {\n    return (\n      <Container width={1} padding={5}>\n        <Feedback\n          tone=\"caution\"\n          title=\"Plugin options error\"\n          description=\"No States defined in plugin config\"\n        />\n      </Container>\n    )\n  }\n\n  if (error) {\n    return (\n      <Container width={1} padding={5}>\n        <Feedback tone=\"critical\" title=\"Error with query\" />\n      </Container>\n    )\n  }\n\n  return (\n    <>\n      {mutatingDocs.length ? (\n        <div style={{position: `absolute`, bottom: 0, background: 'red'}}>\n          {mutatingDocs.map((mutate) => (\n            <Mutate key={mutate._id} {...mutate} onComplete={mutationFinished} />\n          ))}\n        </div>\n      ) : null}\n      {documentsWithoutMetadataIds.length > 0 && (\n        <Box padding={5}>\n          <Card border padding={3} tone=\"caution\">\n            <Flex align=\"center\" justify=\"center\">\n              <Button onClick={() => importDocuments(documentsWithoutMetadataIds)}>\n                Import {documentsWithoutMetadataIds.length} Missing{' '}\n                {documentsWithoutMetadataIds.length === 1 ? `Document` : `Documents`} into Workflow\n              </Button>\n            </Flex>\n          </Card>\n        </Box>\n      )}\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Grid columns={states.length} height=\"fill\">\n          {states.map((state: State, stateIndex: number) => (\n            <Card key={state.id} borderLeft={stateIndex > 0}>\n              <Card paddingY={4} padding={3} style={{pointerEvents: `none`}}>\n                <Label>{state.title}</Label>\n              </Card>\n              <Droppable droppableId={state.id}>\n                {(provided, snapshot) => (\n                  <Card\n                    ref={provided.innerRef}\n                    tone={snapshot.isDraggingOver ? `primary` : defaultCardTone}\n                    height=\"fill\"\n                  >\n                    {loading ? (\n                      <Flex padding={5} align=\"center\" justify=\"center\">\n                        <Spinner muted />\n                      </Flex>\n                    ) : null}\n\n                    {data.length > 0 &&\n                      filterItemsByState(data, state.id).map((item, itemIndex) => (\n                        // The metadata's documentId is always the published one\n                        <Draggable\n                          key={item._metadata.documentId}\n                          draggableId={item._metadata.documentId}\n                          index={itemIndex}\n                        >\n                          {(draggableProvided, draggableSnapshot) => (\n                            <div\n                              ref={draggableProvided.innerRef}\n                              {...draggableProvided.draggableProps}\n                              {...draggableProvided.dragHandleProps}\n                            >\n                              <DocumentCard\n                                isDragging={draggableSnapshot.isDragging}\n                                item={item}\n                                userList={userList}\n                              />\n                            </div>\n                          )}\n                        </Draggable>\n                      ))}\n                  </Card>\n                )}\n              </Droppable>\n            </Card>\n          ))}\n        </Grid>\n      </DragDropContext>\n    </>\n  )\n}\n","import {\n  defineType,\n  defineField,\n  // SchemaTypeDefinition\n} from 'sanity'\n\n// import UserSelectInput from '../../components/UserSelectInput'\nimport {State} from '../../types'\n\nexport default (states: State[]) =>\n  defineType({\n    type: 'document',\n    name: 'workflow.metadata',\n    title: 'Workflow metadata',\n    liveEdit: true,\n    fields: [\n      defineField({\n        name: 'state',\n        type: 'string',\n        options: {\n          list: states.map((state) => ({value: state.id, title: state.title})),\n        },\n      }),\n      defineField({\n        name: 'documentId',\n        title: 'Document ID',\n        type: 'string',\n        readOnly: true,\n      }),\n      defineField({\n        type: 'array',\n        name: 'assignees',\n        description: 'The people who are assigned to move this further in the workflow.',\n        of: [{type: 'string'}],\n        // components: {input: UserSelectInput},\n      }),\n    ],\n  })\n","import React from 'react'\nimport {useListeningQuery} from 'sanity-plugin-utils'\n\nimport {Metadata, State} from '../types'\n\n/**\n * Takes the published ID of a document and return the metadata and current state object\n *\n * @param id Source document published ID\n * @param states Array of States defined in plugin config\n * @returns State\n */\nexport function useWorkflowMetadata(\n  id: string,\n  states: State[]\n): {\n  data: {metadata?: Metadata; state?: State}\n  loading: boolean\n  error: boolean\n} {\n  const {\n    data: metadata,\n    loading,\n    error,\n  } = useListeningQuery<Metadata>(`*[_type == \"workflow.metadata\" && documentId == $id][0]`, {\n    params: {id},\n  })\n\n  if (metadata?.state) {\n    return {\n      data: {\n        metadata,\n        state: states.find((s) => s.id === metadata.state),\n      },\n      loading,\n      error,\n    }\n  }\n\n  return {data: {}, loading, error}\n}\n","import {DocumentBadgeDescription, DocumentBadgeProps} from 'sanity'\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\n\nimport {State} from '../types'\n\nexport function StateBadge(\n  props: DocumentBadgeProps,\n  states: State[]\n): DocumentBadgeDescription | null {\n  const {id} = props\n  const {data, loading, error} = useWorkflowMetadata(id, states)\n  const {state} = data\n\n  if (loading || error) {\n    if (error) {\n      console.error(error)\n    }\n\n    return null\n  }\n\n  if (!state) {\n    return null\n  }\n\n  return {\n    label: state.title,\n    title: state.title,\n    color: state?.color,\n  }\n}\n","import {ArrowRightIcon} from '@sanity/icons'\nimport {useToast} from '@sanity/ui'\nimport {DocumentActionProps, useClient} from 'sanity'\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\n\nimport {State} from '../types'\n\nexport function PromoteAction(props: DocumentActionProps, states: State[]) {\n  const {id} = props\n  const {data, loading, error} = useWorkflowMetadata(id, states)\n  const {state} = data\n  const client = useClient()\n  const toast = useToast()\n\n  if (loading || error) {\n    if (error) {\n      console.error(error)\n    }\n\n    return null\n  }\n\n  if (!state) {\n    return null\n  }\n\n  const onHandle = (documentId: string, newState: State) => {\n    client\n      .patch(`workflow-metadata.${documentId}`)\n      .set({state: newState.id})\n      .commit()\n      .then(() => {\n        props.onComplete()\n        toast.push({\n          status: 'success',\n          title: `Document promoted to ${newState.title}`,\n        })\n      })\n      .catch((err) => {\n        props.onComplete()\n        console.error(err)\n        toast.push({\n          status: 'error',\n          title: `Document promotion failed`,\n        })\n      })\n  }\n\n  const currentStateIndex = states.findIndex((s) => s.id === state.id)\n  const nextState = states[currentStateIndex + 1]\n\n  if (!nextState) {\n    return null\n  }\n\n  return {\n    icon: ArrowRightIcon,\n    label: `Promote`,\n    title: `Promote State to \"${nextState.title}\"`,\n    onHandle: () => onHandle(id, nextState),\n  }\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {useToast} from '@sanity/ui'\nimport {DocumentActionProps, useClient} from 'sanity'\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\n\nimport {State} from '../types'\n\nexport function DemoteAction(props: DocumentActionProps, states: State[]) {\n  const {id} = props\n  const {data, loading, error} = useWorkflowMetadata(id, states)\n  const {state} = data\n  const client = useClient()\n  const toast = useToast()\n\n  if (loading || error) {\n    if (error) {\n      console.error(error)\n    }\n\n    return null\n  }\n\n  if (!state) {\n    return null\n  }\n\n  const onHandle = (documentId: string, newState: State) => {\n    client\n      .patch(`workflow-metadata.${documentId}`)\n      .set({state: newState.id})\n      .commit()\n      .then(() => {\n        props.onComplete()\n        toast.push({\n          status: 'success',\n          title: `Document demoted to ${newState.title}`,\n        })\n      })\n      .catch((err) => {\n        props.onComplete()\n        console.error(err)\n        toast.push({\n          status: 'error',\n          title: `Document demotion failed`,\n        })\n      })\n  }\n\n  const currentStateIndex = states.findIndex((s) => s.id === state.id)\n  const prevState = states[currentStateIndex - 1]\n\n  if (!prevState) {\n    return null\n  }\n\n  return {\n    icon: ArrowLeftIcon,\n    label: `Demote`,\n    title: `Demote State to \"${prevState.title}\"`,\n    onHandle: () => onHandle(id, prevState),\n  }\n}\n","import {definePlugin} from 'sanity'\nimport {CheckmarkIcon, SplitVerticalIcon} from '@sanity/icons'\n\nimport WorkflowTool from './components/WorkflowTool'\nimport {WorkflowConfig} from './types'\nimport metadata from './schema/workflow/metadata'\nimport {StateBadge} from './badges'\nimport {PromoteAction} from './actions/PromoteAction'\nimport {DemoteAction} from './actions/DemoteAction'\nimport StateTimeline from './components/StateTimeline'\n\nconst DEFAULT_CONFIG: WorkflowConfig = {\n  schemaTypes: [],\n  states: [\n    {id: 'draft', title: 'Draft', operation: 'unpublish'},\n    {id: 'inReview', title: 'In review', operation: null, color: 'primary'},\n    {\n      id: 'approved',\n      title: 'Approved',\n      operation: null,\n      color: 'success',\n      icon: CheckmarkIcon,\n    },\n    {\n      id: 'changesRequested',\n      title: 'Changes requested',\n      operation: null,\n      color: 'warning',\n    },\n    {id: 'published', title: 'Published', operation: 'publish', color: 'success'},\n  ],\n}\n\nexport const workflow = definePlugin<WorkflowConfig>((config = DEFAULT_CONFIG) => {\n  const {schemaTypes, states} = {...DEFAULT_CONFIG, ...config}\n\n  if (!states?.length) {\n    throw new Error(`Workflow: Missing states in config`)\n  }\n\n  return {\n    name: 'sanity-plugin-workflow',\n    schema: {\n      types: [metadata(states)],\n    },\n    // form: {\n    //   components: {\n    //     item: (props) => {\n    //       console.log(props)\n    //       // if (props.id === `root` && schemaTypes.includes(props.schemaType.name)) {\n    //       //   return StateTimeline(props)\n    //       // }\n    //       return props.renderDefault(props)\n    //     },\n    //   },\n    // },\n    document: {\n      actions: (prev, context) => {\n        if (!schemaTypes.includes(context.schemaType)) {\n          return prev\n        }\n\n        return [\n          (props) => PromoteAction(props, states),\n          (props) => DemoteAction(props, states),\n          ...prev,\n        ]\n      },\n      badges: (prev, context) => {\n        if (!schemaTypes.includes(context.schemaType)) {\n          return prev\n        }\n\n        return [(props) => StateBadge(props, states), ...prev]\n      },\n    },\n    tools: [\n      {\n        name: 'workflow',\n        title: 'Workflow',\n        component: WorkflowTool,\n        icon: SplitVerticalIcon,\n        options: {schemaTypes, states},\n      },\n    ],\n  }\n})\n"],"names":["EditButton","props","id","type","navigateIntent","useRouter","jsx","Button","onClick","mode","fontSize","padding","tabIndex","icon","EditIcon","text","AvatarGroup","users","max","len","length","visibleUsers","React","useMemo","slice","jsxs","Flex","align","children","map","user","Box","style","marginRight","UserAvatar","paddingLeft","Text","size","UserAssignment","assignees","userList","documentId","client","useClient","toast","useToast","openId","setOpenId","useState","addAssignee","useCallback","userId","push","status","title","patch","concat","setIfMissing","insert","commit","then","description","catch","err","console","error","removeAssignee","unset","res","clearAssignees","Popover","content","UserSelectMenu","maxHeight","value","onAdd","onClear","onRemove","open","portal","width","filter","u","includes","AddIcon","tone","DocumentCard","_a","isDragging","item","_metadata","schema","useSchema","isDarkMode","useTheme","sanity","color","dark","paddingY","paddingX","Card","radius","shadow","Stack","borderBottom","pointerEvents","justify","gap","Preview","layout","schemaType","get","_type","DragHandleIcon","flexShrink","_id","Mutate","state","onComplete","ops","useDocumentOperation","isDraft","startsWith","operation","publish","disabled","execute","unpublish","COMBINED_QUERY","INITIAL_DATA","documents","metadata","WorkflowTool","_b","schemaTypes","states","tool","options","mutatingDocs","setMutatingDocs","mutationFinished","docs","doc","defaultCardTone","useProjectUsers","workflowData","operations","localDocuments","setLocalDocuments","data","loading","useListeningQuery","params","initialValue","useEffect","documentsWithMetadata","reduce","acc","cur","curMeta","find","d","replace","_objectSpread","curWithMetadata","Boolean","move","draggedId","destination","currentLocalData","newLocalDocuments","droppableId","newStateId","newState","s","document","_rev","ifRevisionId","set","useWorkflowDocuments","documentsWithoutMetadataIds","importDocuments","async","tx","ids","createOrReplace","transaction","handleDragEnd","result","draggableId","source","log","mutatingDoc","current","Container","Feedback","Fragment","position","bottom","background","mutate","border","DragDropContext","onDragEnd","Grid","columns","height","stateIndex","borderLeft","Label","Droppable","provided","snapshot","ref","innerRef","isDraggingOver","Spinner","muted","items","stateId","itemIndex","Draggable","index","draggableProvided","draggableSnapshot","draggableProps","dragHandleProps","defineType","name","liveEdit","fields","defineField","list","readOnly","of","useWorkflowMetadata","StateBadge","label","PromoteAction","currentStateIndex","findIndex","nextState","ArrowRightIcon","onHandle","DemoteAction","prevState","ArrowLeftIcon","DEFAULT_CONFIG","CheckmarkIcon","workflow","definePlugin","config","Error","types","actions","prev","context","badges","tools","component","SplitVerticalIcon"],"mappings":"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"}