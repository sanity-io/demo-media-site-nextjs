{"mappings":"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","sources":["src/index.tsx","src/components/WorkflowTool.tsx","src/components/DocumentCard/index.tsx","src/components/DocumentCard/EditButton.tsx","src/components/UserAssignment.tsx","src/components/DocumentCard/AvatarGroup.tsx","src/components/Mutate.tsx","src/hooks/useWorkflowDocuments.tsx","src/schema/workflow/metadata.ts","src/components/UserSelectInput.tsx","src/badges/index.tsx","src/hooks/useWorkflowMetadata.tsx","src/actions/PromoteAction.tsx","src/actions/DemoteAction.tsx","src/components/StateTimeline.tsx"],"sourcesContent":["import React from 'react'\nimport {createPlugin} from 'sanity'\nimport {CheckmarkIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Stack} from '@sanity/ui'\n\nimport WorkflowTool from './components/WorkflowTool'\nimport {WorkflowConfig} from './types'\nimport metadata from './schema/workflow/metadata'\nimport {StateBadge} from './badges'\nimport {PromoteAction} from './actions/PromoteAction'\nimport {DemoteAction} from './actions/DemoteAction'\nimport StateTimeline from './components/StateTimeline'\n\nconst DEFAULT_CONFIG: WorkflowConfig = {\n  schemaTypes: [],\n  states: [\n    {id: 'draft', title: 'Draft', operation: 'unpublish'},\n    {id: 'inReview', title: 'In review', operation: 'unpublish', color: 'primary'},\n    {\n      id: 'approved',\n      title: 'Approved',\n      operation: 'unpublish',\n      color: 'success',\n      icon: CheckmarkIcon,\n    },\n    {\n      id: 'changesRequested',\n      title: 'Changes requested',\n      operation: 'unpublish',\n      color: 'warning',\n    },\n    {id: 'published', title: 'Published', operation: 'publish', color: 'success'},\n  ],\n}\n\nexport const workflow = createPlugin<WorkflowConfig>((config = DEFAULT_CONFIG) => {\n  const {schemaTypes, states} = {...DEFAULT_CONFIG, ...config}\n\n  if (!states?.length) {\n    throw new Error(`Workflow: Missing states in config`)\n  }\n\n  return {\n    name: 'sanity-plugin-workflow',\n    schema: {\n      schemaTypes: [metadata(states)],\n    },\n    form: {\n      renderInput: (inputProps, next) => {\n        if (inputProps.id === `root` && schemaTypes.includes(inputProps.schemaType.name)) {\n          return (\n            <Stack space={3}>\n              <StateTimeline {...inputProps} states={states}>\n                {next(inputProps)}\n              </StateTimeline>\n            </Stack>\n          )\n        }\n\n        return null\n      },\n    },\n    document: {\n      actions: (prev, context) => {\n        if (!schemaTypes.includes(context.schemaType)) {\n          return prev\n        }\n\n        return [\n          (props) => PromoteAction(props, states),\n          (props) => DemoteAction(props, states),\n          ...prev,\n        ]\n      },\n      badges: (prev, context) => {\n        if (!schemaTypes.includes(context.schemaType)) {\n          return prev\n        }\n\n        return [(props) => StateBadge(props, states), ...prev]\n      },\n    },\n    tools: [\n      {\n        name: 'workflow',\n        title: 'Workflow',\n        component: WorkflowTool,\n        icon: SplitVerticalIcon,\n        options: {schemaTypes, states},\n      },\n    ],\n  }\n})\n","import React from 'react'\nimport {\n  Flex,\n  Card,\n  Box,\n  Grid,\n  Spinner,\n  Label,\n  useToast,\n  Container,\n  useTheme,\n  Button,\n} from '@sanity/ui'\nimport {Feedback, useProjectUsers} from 'sanity-plugin-utils'\nimport {Tool, useClient} from 'sanity'\nimport {DragDropContext, Droppable, Draggable, DropResult} from 'react-beautiful-dnd'\n\nimport {SanityDocumentWithMetadata, State} from '../types'\nimport {DocumentCard} from './DocumentCard'\nimport Mutate from './Mutate'\nimport {useWorkflowDocuments} from '../hooks/useWorkflowDocuments'\n\nfunction filterItemsByState(items: SanityDocumentWithMetadata[], stateId: string) {\n  return items.filter((item) => item?._metadata?.state === stateId)\n}\n\ntype WorkflowToolOptions = {\n  schemaTypes: string[]\n  states: State[]\n}\n\ntype WorkflowToolProps = {\n  tool: Tool<WorkflowToolOptions>\n}\n\ntype MutateProps = {\n  _id: string\n  _type: string\n  state: State\n  documentId: string\n}\n\nexport default function WorkflowTool(props: WorkflowToolProps) {\n  const {schemaTypes = [], states = []} = props?.tool?.options ?? {}\n\n  const [mutatingDocs, setMutatingDocs] = React.useState<MutateProps[]>([])\n  const mutationFinished = React.useCallback((documentId: string) => {\n    setMutatingDocs((docs) => docs.filter((doc) => doc._id !== documentId))\n  }, [])\n\n  const client = useClient()\n  const toast = useToast()\n\n  const isDarkMode = useTheme().sanity.color.dark\n  const defaultCardTone = isDarkMode ? 'default' : 'transparent'\n\n  const userList = useProjectUsers() || []\n  const {workflowData, operations} = useWorkflowDocuments(schemaTypes)\n\n  // Data to display in cards\n  const {data, loading, error} = workflowData\n\n  // Operations to perform on cards\n  const {move} = operations\n\n  const documentIdsWithoutMetadata = data\n    .filter((doc) => !doc._metadata)\n    .map((d) => d._id.replace(`drafts.`, ``))\n\n  const handleDragEnd = React.useCallback(\n    (result: DropResult) => {\n      const {draggableId, source, destination} = result\n      console.log(\n        `sending ${draggableId} from ${source.droppableId} to ${destination?.droppableId}`\n      )\n\n      if (!destination || destination.droppableId === source.droppableId) {\n        return\n      }\n\n      // The list of mutating docs is how we un/publish documents\n      const mutatingDoc = move(draggableId, destination, states)\n\n      if (mutatingDoc) {\n        setMutatingDocs((current) => [...current, mutatingDoc])\n      }\n    },\n    [move, states]\n  )\n\n  if (!states?.length) {\n    return (\n      <Container width={1} padding={5}>\n        <Feedback\n          tone=\"caution\"\n          title=\"Plugin options error\"\n          description=\"No States defined in plugin config\"\n        />\n      </Container>\n    )\n  }\n\n  if (error) {\n    return (\n      <Container width={1} padding={5}>\n        <Feedback tone=\"critical\" title=\"Error with query\" />\n      </Container>\n    )\n  }\n\n  return (\n    <>\n      {mutatingDocs.length ? (\n        <div style={{position: `absolute`, bottom: 0, background: 'red'}}>\n          {mutatingDocs.map((mutate) => (\n            <Mutate key={mutate._id} {...mutate} onComplete={mutationFinished} />\n          ))}\n        </div>\n      ) : null}\n      {documentIdsWithoutMetadata.length > 0 && (\n        <Box paddingY={5} paddingX={3}>\n          <Card shadow={1} padding={4} style={{textAlign: 'center'}}>\n            <Button\n              tone=\"primary\"\n              // onClick={() => metadataList.importDocuments(documentIdsWithoutMetadata)}\n            >\n              Import {documentIdsWithoutMetadata.length}{' '}\n              {documentIdsWithoutMetadata.length === 1 ? `Document` : `Documents`}\n            </Button>\n          </Card>\n        </Box>\n      )}\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <Grid columns={states.length} height=\"fill\">\n          {states.map((state: State, stateIndex: number) => (\n            <Card key={state.id} borderLeft={stateIndex > 0}>\n              <Card paddingY={4} padding={3} style={{pointerEvents: `none`}}>\n                <Label>{state.title}</Label>\n              </Card>\n              <Droppable droppableId={state.id}>\n                {(provided, snapshot) => (\n                  <Card\n                    ref={provided.innerRef}\n                    tone={snapshot.isDraggingOver ? `primary` : defaultCardTone}\n                    height=\"fill\"\n                  >\n                    {loading ? (\n                      <Flex padding={5} align=\"center\" justify=\"center\">\n                        <Spinner muted />\n                      </Flex>\n                    ) : null}\n\n                    {data.length > 0 &&\n                      filterItemsByState(data, state.id).map((item, itemIndex) => (\n                        // The metadata's documentId is always the published one\n                        <Draggable\n                          key={item._metadata.documentId}\n                          draggableId={item._metadata.documentId}\n                          index={itemIndex}\n                        >\n                          {(draggableProvided, draggableSnapshot) => (\n                            <div\n                              ref={draggableProvided.innerRef}\n                              {...draggableProvided.draggableProps}\n                              {...draggableProvided.dragHandleProps}\n                            >\n                              <DocumentCard\n                                isDragging={draggableSnapshot.isDragging}\n                                item={item}\n                                userList={userList}\n                              />\n                            </div>\n                          )}\n                        </Draggable>\n                      ))}\n                  </Card>\n                )}\n              </Droppable>\n            </Card>\n          ))}\n        </Grid>\n      </DragDropContext>\n    </>\n  )\n}\n","/* eslint-disable react/prop-types */\nimport {Box, Button, Card, Flex, Popover, Stack, useClickOutside, useTheme} from '@sanity/ui'\nimport {AddIcon, DragHandleIcon} from '@sanity/icons'\nimport React, {useState} from 'react'\nimport {useSchema, SchemaType} from 'sanity'\nimport {UserSelectMenu} from 'sanity-plugin-utils'\nimport {SanityPreview as Preview} from 'sanity/_unstable'\n\nimport EditButton from './EditButton'\nimport {SanityDocumentWithMetadata, User} from '../../types'\nimport AvatarGroup from './AvatarGroup'\nimport UserAssignment from '../UserAssignment'\n\ntype DocumentCardProps = {\n  userList: User[]\n  isDragging: boolean\n  item: SanityDocumentWithMetadata\n}\n\nexport function DocumentCard(props: DocumentCardProps) {\n  const {userList, isDragging, item} = props\n  const {assignees, documentId} = item._metadata ?? {}\n  const schema = useSchema()\n\n  const isDarkMode = useTheme().sanity.color.dark\n  const defaultCardTone = isDarkMode ? 'transparent' : 'default'\n\n  // Open/close handler\n  // const [popoverRef, setPopoverRef] = useState(null)\n  // const [openId, setOpenId] = useState<string | undefined>(``)\n\n  // useClickOutside(() => setOpenId(``), [popoverRef])\n\n  // const handleKeyDown = React.useCallback((e) => {\n  //   if (e.key === 'Escape') {\n  //     setOpenId(``)\n  //   }\n  // }, [])\n\n  return (\n    <Box paddingY={2} paddingX={3}>\n      <Card radius={2} shadow={isDragging ? 3 : 1} tone={isDragging ? 'positive' : defaultCardTone}>\n        <Stack>\n          <Card\n            borderBottom\n            radius={2}\n            padding={3}\n            paddingLeft={2}\n            tone=\"inherit\"\n            style={{pointerEvents: 'none'}}\n          >\n            <Flex align=\"center\" justify=\"space-between\" gap={1}>\n              <Preview\n                layout=\"default\"\n                value={item}\n                schemaType={schema.get(item._type) as SchemaType}\n              />\n              <DragHandleIcon style={{flexShrink: 0}} />\n            </Flex>\n          </Card>\n\n          <Card padding={2} radius={2} tone=\"inherit\">\n            <Flex align=\"center\" justify=\"space-between\" gap={1}>\n              <UserAssignment userList={userList} assignees={assignees} documentId={documentId} />\n\n              <EditButton id={item._id} type={item._type} />\n            </Flex>\n          </Card>\n        </Stack>\n      </Card>\n    </Box>\n  )\n}\n","import React from 'react'\nimport {Button} from '@sanity/ui'\nimport {EditIcon} from '@sanity/icons'\nimport {useRouter} from 'sanity/_unstable'\n\ntype EditButtonProps = {\n  id: string\n  type: string\n}\n\nexport default function EditButton(props: EditButtonProps) {\n  const {id, type} = props\n  const {navigateIntent} = useRouter()\n\n  return (\n    <Button\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick={() => navigateIntent('edit', {id, type})}\n      mode=\"ghost\"\n      fontSize={1}\n      padding={2}\n      tabIndex={-1}\n      icon={EditIcon}\n      text=\"Edit\"\n    />\n  )\n}\n","import React from 'react'\nimport {Button, Popover, useToast} from '@sanity/ui'\nimport {AddIcon} from '@sanity/icons'\nimport {UserSelectMenu} from 'sanity-plugin-utils'\nimport {useClient} from 'sanity'\n\nimport AvatarGroup from './DocumentCard/AvatarGroup'\nimport {User} from '../types'\n\ntype UserAssignmentProps = {\n  userList: User[]\n  assignees: string[]\n  documentId: string\n}\n\nexport default function UserAssignment(props: UserAssignmentProps) {\n  const {assignees, userList, documentId} = props\n  const client = useClient()\n  const toast = useToast()\n  const [openId, setOpenId] = React.useState<string>(``)\n\n  const addAssignee = React.useCallback(\n    (id: string, userId: string) => {\n      client\n        .patch(`workflow-metadata.${id}`)\n        .setIfMissing({assignees: []})\n        .insert(`after`, `assignees[-1]`, [userId])\n        .commit()\n        .then((res) => res)\n        .catch((err) => {\n          console.error(err)\n\n          return toast.push({\n            title: `Failed to add assignee`,\n            description: id,\n            status: 'error',\n          })\n        })\n    },\n    [client, toast]\n  )\n\n  const removeAssignee = React.useCallback(\n    (id: string, userId: string) => {\n      client\n        .patch(`workflow-metadata.${id}`)\n        .unset([`assignees[@ == \"${userId}\"]`])\n        .commit()\n        .then((res) => res)\n        .catch((err) => {\n          console.error(err)\n\n          return toast.push({\n            title: `Failed to remove assignee`,\n            description: id,\n            status: 'error',\n          })\n        })\n    },\n    [client, toast]\n  )\n\n  const clearAssignees = React.useCallback(\n    (id: string) => {\n      client\n        .patch(`workflow-metadata.${id}`)\n        .unset([`assignees`])\n        .commit()\n        .then((res) => res)\n        .catch((err) => {\n          console.error(err)\n\n          return toast.push({\n            title: `Failed to clear assignees`,\n            description: id,\n            status: 'error',\n          })\n        })\n    },\n    [client, toast]\n  )\n\n  return (\n    <Popover\n      // @ts-ignore\n      // ref={setPopoverRef}\n      // onKeyDown={handleKeyDown}\n      content={\n        <UserSelectMenu\n          // open={false}\n          style={{maxHeight: 300}}\n          value={assignees || []}\n          userList={userList}\n          onAdd={addAssignee}\n          onClear={clearAssignees}\n          onRemove={removeAssignee}\n          open={openId === documentId}\n        />\n      }\n      portal\n      open={openId === documentId}\n    >\n      {!assignees || assignees.length === 0 ? (\n        <Button\n          onClick={() => setOpenId(documentId)}\n          fontSize={1}\n          padding={2}\n          tabIndex={-1}\n          icon={AddIcon}\n          text=\"Assign\"\n          tone=\"positive\"\n        />\n      ) : (\n        <Button\n          onClick={() => setOpenId(documentId)}\n          padding={0}\n          mode=\"bleed\"\n          style={{width: `100%`}}\n        >\n          <AvatarGroup users={userList.filter((u) => assignees.includes(u.id))} />\n        </Button>\n      )}\n    </Popover>\n  )\n}\n","import React from 'react'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {UserAvatar} from 'sanity/_unstable'\n\nimport {User} from '../../types'\n\ntype AvatarGroupProps = {\n  users: User[]\n  max?: number\n}\n\nexport default function AvatarGroup(props: AvatarGroupProps) {\n  const {users, max = 3} = props\n\n  const len = users?.length\n  const visibleUsers = React.useMemo(() => users.slice(0, max), [users]) as User[]\n\n  if (!users?.length) {\n    return null\n  }\n\n  return (\n    <Flex align=\"center\">\n      {visibleUsers.map((user) => (\n        <Box key={user.id} style={{marginRight: -5}}>\n          <UserAvatar user={user} />\n        </Box>\n      ))}\n      {len > max && (\n        <Box paddingLeft={2}>\n          <Text size={1}>+{len - max}</Text>\n        </Box>\n      )}\n    </Flex>\n  )\n}\n","import React from 'react'\nimport {Card, useToast} from '@sanity/ui'\nimport {useDocumentOperation} from 'sanity'\n\nimport {State} from '../types'\n\ntype MutateProps = {\n  _id: string\n  _type: string\n  state: State\n  documentId: string\n  onComplete: (id: string) => void\n}\n\nexport default function Mutate(props: MutateProps) {\n  const {_id, _type, documentId, state, onComplete} = props\n  const ops = useDocumentOperation(documentId, _type)\n  const isDraft = _id.startsWith('drafts.')\n\n  const toast = useToast()\n\n  if (isDraft && state.operation === 'publish') {\n    if (!ops.publish.disabled) {\n      ops.publish.execute()\n      onComplete(_id)\n      toast.push({\n        title: 'Published Document',\n        description: documentId,\n        status: 'success',\n      })\n    }\n  } else if (!isDraft && state.operation === 'unpublish') {\n    if (!ops.unpublish.disabled) {\n      ops.unpublish.execute()\n      onComplete(_id)\n      toast.push({\n        title: 'Unpublished Document',\n        description: documentId,\n        status: 'success',\n      })\n    }\n  } else {\n    // Clean up if it's not going to un/publish\n    onComplete(_id)\n  }\n\n  // return null\n\n  return (\n    <Card padding={3} shadow={2} tone=\"primary\">\n      Mutating: {_id} to {state.title}\n    </Card>\n  )\n}\n","import React from 'react'\nimport {useListeningQuery} from 'sanity-plugin-utils'\nimport {useToast} from '@sanity/ui'\nimport {SanityDocumentLike, useClient} from 'sanity'\nimport {DraggableLocation} from 'react-beautiful-dnd'\n\nimport {SanityDocumentWithMetadata, Metadata, State} from '../types'\n\ntype DocumentsAndMetadata = {\n  documents: SanityDocumentLike[]\n  metadata: Metadata[]\n}\n\nconst DOCUMENT_LIST_QUERY = `*[_type in $schemaTypes]{ _id, _type, _rev }`\nconst METADATA_LIST_QUERY = `*[_type == \"workflow.metadata\"]{\n  _rev,\n  assignees,\n  documentId,\n  state\n}`\n\nconst COMBINED_QUERY = `{\n  \"documents\": ${DOCUMENT_LIST_QUERY},\n  \"metadata\": ${METADATA_LIST_QUERY}\n}`\n\nconst INITIAL_DATA: DocumentsAndMetadata = {\n  documents: [],\n  metadata: [],\n}\n\nexport function useWorkflowDocuments(schemaTypes: string[]) {\n  const toast = useToast()\n  const client = useClient()\n  const [localDocuments, setLocalDocuments] = React.useState<SanityDocumentWithMetadata[]>([])\n\n  // Get and listen to changes on documents + workflow metadata documents\n  const {data, loading, error} = useListeningQuery<DocumentsAndMetadata>(COMBINED_QUERY, {\n    params: {schemaTypes},\n    initialValue: INITIAL_DATA,\n  })\n\n  // Store local state for optimistic updates\n  React.useEffect(() => {\n    if (data) {\n      // Combine metadata data into document\n      const documentsWithMetadata = data.documents.reduce(\n        (acc: SanityDocumentWithMetadata[], cur) => {\n          // Filter out documents without metadata\n          const curMeta = data.metadata.find((d) => d.documentId === cur._id.replace(`drafts.`, ``))\n\n          if (!curMeta) {\n            return acc\n          }\n\n          const curWithMetadata = {_metadata: curMeta, ...cur}\n\n          // Remove `published` from array if `draft` exists\n          if (!cur._id.startsWith(`drafts.`)) {\n            // eslint-disable-next-line max-nested-callbacks\n            const alsoHasDraft: boolean = Boolean(\n              data.documents.find((doc) => doc._id === `drafts.${cur._id}`)\n            )\n\n            return alsoHasDraft ? acc : [...acc, curWithMetadata]\n          }\n\n          return [...acc, curWithMetadata]\n        },\n        []\n      )\n\n      setLocalDocuments(documentsWithMetadata)\n    }\n  }, [data])\n\n  const move = React.useCallback(\n    (draggedId: string, destination: DraggableLocation, states: State[]) => {\n      // Optimistic update\n      const currentLocalData = localDocuments\n      const newLocalDocuments = localDocuments.map((item) => {\n        if (item._metadata.documentId === draggedId) {\n          return {\n            ...item,\n            _metadata: {\n              ...item._metadata,\n              state: destination.droppableId,\n            },\n          }\n        }\n\n        return item\n      })\n\n      setLocalDocuments(newLocalDocuments)\n\n      // Now client-side update\n      const newStateId = destination.droppableId\n      const newState = states.find((s) => s.id === newStateId)\n      const document = localDocuments.find((d) => d._metadata.documentId === draggedId)\n\n      if (!newState?.id) {\n        toast.push({\n          title: `Could not find target state ${newStateId}`,\n          status: 'error',\n        })\n        return null\n      }\n\n      if (!document) {\n        toast.push({\n          title: `Could not find dragged document in data`,\n          status: 'error',\n        })\n        return null\n      }\n\n      // We need to know if it's a draft or not\n      const {_id, _type} = document\n\n      // Metadata + useDocumentOperation always uses Published id\n      const {_rev, documentId} = document._metadata\n\n      client\n        .patch(`workflow-metadata.${documentId}`)\n        .ifRevisionId(_rev)\n        .set({state: newStateId})\n        .commit()\n        .then(() => {\n          return toast.push({\n            title: `Moved to \"${newState?.title ?? newStateId}\"`,\n            description: documentId,\n            status: 'success',\n          })\n        })\n        .catch(() => {\n          // Revert optimistic update\n          setLocalDocuments(currentLocalData)\n\n          return toast.push({\n            title: `Failed to move to \"${newState?.title ?? newStateId}\"`,\n            description: documentId,\n            status: 'error',\n          })\n        })\n\n      // Send back to the workflow board so a document update can happen\n      return {_id, _type, documentId, state: newState as State}\n    },\n    [client, toast, localDocuments]\n  )\n\n  return {\n    workflowData: {data: localDocuments, loading, error},\n    operations: {move},\n  }\n}\n","import {defineType, defineField, SchemaTypeDefinition} from 'sanity'\n\nimport UserSelectInput from '../../components/UserSelectInput'\nimport {State} from '../../types'\n\nexport default (states: State[]): SchemaTypeDefinition =>\n  defineType({\n    type: 'document',\n    name: 'workflow.metadata',\n    title: 'Workflow metadata',\n    liveEdit: true,\n    fields: [\n      defineField({\n        name: 'state',\n        type: 'string',\n        options: {\n          list: states.map((state) => ({value: state.id, title: state.title})),\n        },\n      }),\n      defineField({\n        name: 'documentId',\n        title: 'Document ID',\n        type: 'string',\n        readOnly: true,\n      }),\n      defineField({\n        type: 'array',\n        name: 'assignees',\n        description: 'The people who are assigned to move this further in the workflow.',\n        of: [{type: 'string'}],\n        components: {input: UserSelectInput},\n      }),\n    ],\n  })\n","import {Card} from '@sanity/ui'\nimport React, {useCallback} from 'react'\nimport {ArrayOfPrimitivesInputProps} from 'sanity'\nimport {setIfMissing, insert, unset} from 'sanity/form'\nimport {UserSelectMenu, useProjectUsers} from 'sanity-plugin-utils'\n\nexport default function UserSelectInput(props: ArrayOfPrimitivesInputProps) {\n  const {value = [], onChange} = props\n  const userList = useProjectUsers()\n\n  const onAssigneeAdd = useCallback(\n    (userId: string) => {\n      onChange([setIfMissing([]), insert([userId], `after`, [-1])])\n    },\n    [onChange]\n  )\n\n  const onAssigneeRemove = useCallback(\n    (userId: string) => {\n      const userIdIndex = value.findIndex((v) => v === userId)\n\n      onChange(unset([userIdIndex]))\n    },\n    [onChange, value]\n  )\n\n  const onAssigneesClear = useCallback(() => {\n    onChange(unset())\n  }, [onChange])\n\n  return (\n    <Card border radius={3} padding={1}>\n      <UserSelectMenu\n        open\n        value={value as string[]}\n        userList={userList}\n        onAdd={onAssigneeAdd}\n        onClear={onAssigneesClear}\n        onRemove={onAssigneeRemove}\n      />\n    </Card>\n  )\n}\n","import {DocumentBadgeDescription, DocumentBadgeProps} from 'sanity'\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\n\nimport {State} from '../types'\n\nexport function StateBadge(\n  props: DocumentBadgeProps,\n  states: State[]\n): DocumentBadgeDescription | null {\n  const {id} = props\n  const {data, loading, error} = useWorkflowMetadata(id, states)\n  const {state} = data\n\n  if (loading || error) {\n    if (error) {\n      console.error(error)\n    }\n\n    return null\n  }\n\n  if (!state) {\n    return null\n  }\n\n  return {\n    label: state.title,\n    title: state.title,\n    color: state?.color,\n  }\n}\n","import React from 'react'\nimport {useListeningQuery} from 'sanity-plugin-utils'\n\nimport {Metadata, State} from '../types'\n\n/**\n * Takes the published ID of a document and return the metadata and current state object\n *\n * @param id Source document published ID\n * @param states Array of States defined in plugin config\n * @returns State\n */\nexport function useWorkflowMetadata(\n  id: string,\n  states: State[]\n): {\n  data: {metadata?: Metadata; state?: State}\n  loading: boolean\n  error: boolean\n} {\n  const {\n    data: metadata,\n    loading,\n    error,\n  } = useListeningQuery<Metadata>(`*[_type == \"workflow.metadata\" && documentId == $id][0]`, {\n    params: {id},\n  })\n\n  if (metadata?.state) {\n    return {\n      data: {\n        metadata,\n        state: states.find((s) => s.id === metadata.state),\n      },\n      loading,\n      error,\n    }\n  }\n\n  return {data: {}, loading, error}\n}\n","import {ArrowRightIcon} from '@sanity/icons'\nimport {useToast} from '@sanity/ui'\nimport {DocumentActionProps, useClient} from 'sanity'\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\n\nimport {State} from '../types'\n\nexport function PromoteAction(props: DocumentActionProps, states: State[]) {\n  const {id} = props\n  const {data, loading, error} = useWorkflowMetadata(id, states)\n  const {state} = data\n  const client = useClient()\n  const toast = useToast()\n\n  if (loading || error) {\n    if (error) {\n      console.error(error)\n    }\n\n    return null\n  }\n\n  if (!state) {\n    return null\n  }\n\n  const onHandle = (documentId: string, newState: State) => {\n    client\n      .patch(`workflow-metadata.${documentId}`)\n      .set({state: newState.id})\n      .commit()\n      .then(() => {\n        props.onComplete()\n        toast.push({\n          status: 'success',\n          title: `Document promoted to ${newState.title}`,\n        })\n      })\n      .catch((err) => {\n        props.onComplete()\n        console.error(err)\n        toast.push({\n          status: 'error',\n          title: `Document promotion failed`,\n        })\n      })\n  }\n\n  const currentStateIndex = states.findIndex((s) => s.id === state.id)\n  const nextState = states[currentStateIndex + 1]\n\n  if (!nextState) {\n    return null\n  }\n\n  return {\n    icon: ArrowRightIcon,\n    label: `Promote`,\n    title: `Promote State to \"${nextState.title}\"`,\n    onHandle: () => onHandle(id, nextState),\n  }\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {useToast} from '@sanity/ui'\nimport {DocumentActionProps, useClient} from 'sanity'\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\n\nimport {State} from '../types'\n\nexport function DemoteAction(props: DocumentActionProps, states: State[]) {\n  const {id} = props\n  const {data, loading, error} = useWorkflowMetadata(id, states)\n  const {state} = data\n  const client = useClient()\n  const toast = useToast()\n\n  if (loading || error) {\n    if (error) {\n      console.error(error)\n    }\n\n    return null\n  }\n\n  if (!state) {\n    return null\n  }\n\n  const onHandle = (documentId: string, newState: State) => {\n    client\n      .patch(`workflow-metadata.${documentId}`)\n      .set({state: newState.id})\n      .commit()\n      .then(() => {\n        props.onComplete()\n        toast.push({\n          status: 'success',\n          title: `Document demoted to ${newState.title}`,\n        })\n      })\n      .catch((err) => {\n        props.onComplete()\n        console.error(err)\n        toast.push({\n          status: 'error',\n          title: `Document demotion failed`,\n        })\n      })\n  }\n\n  const currentStateIndex = states.findIndex((s) => s.id === state.id)\n  const prevState = states[currentStateIndex - 1]\n\n  if (!prevState) {\n    return null\n  }\n\n  return {\n    icon: ArrowLeftIcon,\n    label: `Demote`,\n    title: `Demote State to \"${prevState.title}\"`,\n    onHandle: () => onHandle(id, prevState),\n  }\n}\n","import {Button, Card, Text, Inline, Stack, useToast} from '@sanity/ui'\nimport React, {useEffect} from 'react'\nimport {InputProps, useClient} from 'sanity'\n\nimport {useWorkflowMetadata} from '../hooks/useWorkflowMetadata'\nimport {State} from '../types'\n\ntype StateTimelineProps = InputProps & {\n  states: State[]\n  children: React.ReactNode\n}\n\nexport default function StateTimeline(props: StateTimelineProps) {\n  const {value, states, children} = props\n\n  // check if value is an object\n  const valueIsObject = typeof value === 'object' && value !== null && !Array.isArray(value)\n  const documentId = valueIsObject ? String(value._id) : ``\n\n  const {data, loading, error} = useWorkflowMetadata(documentId, states)\n  const {state} = data\n  const [mutatingToState, setMutatingToState] = React.useState<string | null>(null)\n\n  const client = useClient()\n  const toast = useToast()\n\n  // Just because the document is patched ...\n  // doesn't mean the latest data has been returned from the listener\n  useEffect(() => {\n    if (data) {\n      setMutatingToState(null)\n    }\n  }, [data])\n\n  const changeState = React.useCallback(\n    (publishedId: string, newState: State) => {\n      setMutatingToState(newState.id)\n\n      client\n        .patch(`workflow-metadata.${publishedId}`)\n        .set({state: newState.id})\n        .commit()\n        .then(() => {\n          toast.push({\n            status: 'success',\n            title: `Document moved to ${newState.title}`,\n          })\n        })\n        .catch((err) => {\n          console.error(err)\n          toast.push({\n            status: 'error',\n            title: `Document moved failed`,\n          })\n        })\n    },\n    [client, toast]\n  )\n\n  return (\n    <Stack space={3}>\n      <Text weight=\"medium\" size={1}>\n        Workflow State\n      </Text>\n      <Card padding={1} radius={3} border tone=\"primary\">\n        <Inline space={1}>\n          {states.map((s) => (\n            <Button\n              disabled={loading || error || Boolean(mutatingToState)}\n              fontSize={1}\n              tone=\"primary\"\n              mode={\n                (!mutatingToState && s.id === state?.id) || s.id === mutatingToState\n                  ? `default`\n                  : `ghost`\n              }\n              key={s.id}\n              text={s.title}\n              radius={2}\n              onClick={() => changeState(documentId, s)}\n            />\n          ))}\n        </Inline>\n      </Card>\n\n      {children}\n    </Stack>\n  )\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../"}