{"mappings":";AAGA,aAAoB;IAClB,EAAE,EAAE,MAAM,CAAA;IACV,KAAK,EAAE,MAAM,CAAA;IACb,SAAS,CAAC,EAAE,SAAS,GAAG,WAAW,CAAA;IAEnC,KAAK,CAAC,EAAE,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,QAAQ,CAAA;IACpD,IAAI,CAAC,EAAE,MAAM,SAAS,GAAG,MAAM,aAAa,CAAA;CAC7C,CAAA;AAED,sBAA6B;IAC3B,WAAW,EAAE,MAAM,EAAE,CAAA;IACrB,MAAM,CAAC,EAAE,KAAK,EAAE,CAAA;CACjB,CAAA;AeoBD,OAAO,MAAM,iDAyDX,CAAA","sources":["src/src/types/index.ts","src/src/components/DocumentCard/EditButton.tsx","src/src/components/DocumentCard/AvatarGroup.tsx","src/src/components/UserAssignment.tsx","src/src/components/DocumentCard/index.tsx","src/src/components/Mutate.tsx","src/src/hooks/useWorkflowDocuments.tsx","src/src/components/WorkflowTool.tsx","src/src/components/UserSelectInput.tsx","src/src/schema/workflow/metadata.ts","src/src/hooks/useWorkflowMetadata.tsx","src/src/badges/index.tsx","src/src/actions/PromoteAction.tsx","src/src/actions/DemoteAction.tsx","src/src/components/StateTimeline.tsx","src/src/index.tsx","src/index.tsx"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import React from 'react'\nimport {createPlugin} from 'sanity'\nimport {CheckmarkIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Stack} from '@sanity/ui'\n\nimport WorkflowTool from './components/WorkflowTool'\nimport {WorkflowConfig} from './types'\nimport metadata from './schema/workflow/metadata'\nimport {StateBadge} from './badges'\nimport {PromoteAction} from './actions/PromoteAction'\nimport {DemoteAction} from './actions/DemoteAction'\nimport StateTimeline from './components/StateTimeline'\n\nconst DEFAULT_CONFIG: WorkflowConfig = {\n  schemaTypes: [],\n  states: [\n    {id: 'draft', title: 'Draft', operation: 'unpublish'},\n    {id: 'inReview', title: 'In review', operation: 'unpublish', color: 'primary'},\n    {\n      id: 'approved',\n      title: 'Approved',\n      operation: 'unpublish',\n      color: 'success',\n      icon: CheckmarkIcon,\n    },\n    {\n      id: 'changesRequested',\n      title: 'Changes requested',\n      operation: 'unpublish',\n      color: 'warning',\n    },\n    {id: 'published', title: 'Published', operation: 'publish', color: 'success'},\n  ],\n}\n\nexport const workflow = createPlugin<WorkflowConfig>((config = DEFAULT_CONFIG) => {\n  const {schemaTypes, states} = {...DEFAULT_CONFIG, ...config}\n\n  if (!states?.length) {\n    throw new Error(`Workflow: Missing states in config`)\n  }\n\n  return {\n    name: 'sanity-plugin-workflow',\n    schema: {\n      schemaTypes: [metadata(states)],\n    },\n    form: {\n      renderInput: (inputProps, next) => {\n        if (inputProps.id === `root` && schemaTypes.includes(inputProps.schemaType.name)) {\n          return (\n            <Stack space={3}>\n              <StateTimeline {...inputProps} states={states}>\n                {next(inputProps)}\n              </StateTimeline>\n            </Stack>\n          )\n        }\n\n        return null\n      },\n    },\n    document: {\n      actions: (prev, context) => {\n        if (!schemaTypes.includes(context.schemaType)) {\n          return prev\n        }\n\n        return [\n          (props) => PromoteAction(props, states),\n          (props) => DemoteAction(props, states),\n          ...prev,\n        ]\n      },\n      badges: (prev, context) => {\n        if (!schemaTypes.includes(context.schemaType)) {\n          return prev\n        }\n\n        return [(props) => StateBadge(props, states), ...prev]\n      },\n    },\n    tools: [\n      {\n        name: 'workflow',\n        title: 'Workflow',\n        component: WorkflowTool,\n        icon: SplitVerticalIcon,\n        options: {schemaTypes, states},\n      },\n    ],\n  }\n})\n"],"names":[],"version":3,"file":"index.d.ts.map","sourceRoot":"../../"}